<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config/config.properties" />

	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="dk.dao,dk.service,com.hive.*.service" />
	
	<!-- Scheduler的配置 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
       <property name="triggers">  
           <list>  
              <ref bean="testTrigger"/>  
              <ref bean="activityTrigger"/>  
           </list>  
       </property>  
       <property name="autoStartup" value="true"/>  
	</bean> 
	<!-- Trigger的配置 -->
	<bean id="testTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
       <property name="jobDetail" ref="testJobDetail"/>  
       <property name="cronExpression" value="0 0 10 * * ?"/><!-- 每天上午10点执行一次 --> 
        <!-- <property name="cronExpression" value="*/59 * * * * ?"/> --><!-- 每隔1分钟执行一次 -->   
       
	</bean> 
	<!-- JobDetail的配置 -->
	<bean id="testJobDetail" lazy-init="false" autowire="no"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
        <property name="targetObject" ref="testJob"/>  
        <property name="targetMethod" value="execute"/>  
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->  
	</bean> 
	
	<bean id="testJob" class="com.hive.enterprisemanage.EnterpriseCoordinateTimeTask"/> 
	
		<!-- Trigger的配置 -->
	<bean id="activityTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
       <property name="jobDetail" ref="activityJobDetail"/>  
       <property name="cronExpression" value="0 0 0 * * ?"/>
       
	</bean> 
	<!-- JobDetail的配置 -->
	<bean id="activityJobDetail" lazy-init="false" autowire="no"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
        <property name="targetObject" ref="activityJob"/>  
        <property name="targetMethod" value="execute"/>  
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->  
	</bean> 
	<!-- 活动定时任务 --> 
	<bean id="activityJob" class="com.hive.activityManage.ActivityTimeTask"/>
	
	<!--kaptcha 产生验证码 配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">black</prop>
						<prop key="kaptcha.image.width">225</prop>
						<prop key="kaptcha.image.height">100</prop>
						<prop key="kaptcha.textproducer.font.size">70</prop>
						<prop key="kaptcha.session.key">CheckCode</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<bean id="propertiesFileUtil" class="com.hive.util.PropertiesFileUtil" />
</beans>